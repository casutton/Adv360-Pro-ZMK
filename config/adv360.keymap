#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/* Custom Device-tree */
&sk {
  quick-release;
};

&lt {
  quick-tap-ms = <200>;
  tapping-term-ms = <175>;
};

/* Custom Defined Behaviors */
/ {

    behaviors {

       /* For the mod keys on the shift, allow them to do one
        * modifier on hold, but a different modifier (sticky) on tap. */    
        sht: sticky_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&sk>;
        };

        /* For shift keys, a tap dance lets them be shift or caps word. */  
        tdsh: tap_dance_shift {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSFT>, <&caps_word>;
        };

        /* Let the bottom corner button toggle layers based on a tap dance. */
        tdtog: tap_dance_layer_toggle {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&tog 1>, <&tog 2>;
        };

        /* Command keys for Rectangle.app */
        tdwinlft: tap_dance_window_left {
          compatible = "zmk,behavior-tap-dance";
          #binding-cells = <0>;
          bindings = <&kp LA(LC(LEFT))>, <&kp LA(LG(LS(LEFT)))>, <&kp LC(LA(E))>;
        };

        tdwinrt: tap_dance_window_right {
          compatible = "zmk,behavior-tap-dance";
          #binding-cells = <0>;
          bindings = <&kp LA(LC(RIGHT))>, <&kp LA(LG(LS(RIGHT)))>, <&kp LC(LA(T))>;
        };
    };

};

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick_tap_ms = <175>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };

  keymap {
    compatible = "zmk,keymap";
 
    default_layer {
      bindings = <
        &kp ESC   &kp N1    &kp N2    &kp N3   &kp N4     &kp N5 &kp LG(LC(Q))                                                           &mo 3 &kp N6 &kp N7 &kp N8   &kp N9   &kp N0   &kp MINUS
        &kp TAB   &kp SQT   &kp COMMA &kp DOT  &kp P      &kp Y  &kp LG(GRAVE)                                                   &tdwinlft &kp F  &kp G  &kp C    &kp R    &kp L    &kp SLASH
        &kp EQUAL &kp A     &kp O     &kp E    &kp U      &kp I  &to 0     &sht LGUI LSHFT &kp LALT &kp RCTRL &sht RGUI RSHFT    &tdwinrt &kp D  &kp H  &kp T    &kp N    &kp S    &kp BSLH
        &tdsh     &kp SEMI  &kp Q     &kp J    &kp K      &kp X                            &kp HOME &kp PG_UP                           &kp B  &kp M  &kp W    &kp V    &kp Z    &tdsh
        &tdtog    &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT            &lt 1 BSPC &lt 2 MINUS  &kp END  &kp PG_DN &lt 2 ENTER &lt 1 SPACE          &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo 2
      >;
    };
    symbol {
      bindings = <
        &kp F1 &kp F2      &kp F3        &kp F4         &kp F5    &kp F6  &trans                                            &trans  &kp F7        &kp F8     &kp F9       &kp F10      &kp F11   &kp F12
        &trans &kp LS(SQT) &kp LS(COMMA) &kp LS(DOT)    &kp GRAVE &kp LS(N2)  &trans                                        &trans &kp RS(N7)    &kp RS(N5) &kp LBKT     &kp RBKT     &kp FSLH  &trans
        &trans &kp LS(N1)  &kp MINUS     &kp LS(EQUAL)  &kp EQUAL &kp LS(N3)  &trans        &trans &trans &trans &trans     &trans &kp RS(BSLH)  &kp RS(N8) &kp RS(N9)   &kp RS(N0)   &kp BSLH  &trans
        &trans &trans      &none         &none          &none     &kp LS(N4)                      &trans &trans                    &kp RS(GRAVE) &kp RS(N6) &kp RS(LBKT) &kp RS(RBKT) &none     &trans
        &trans &none       &none         &none          &none                &trans &trans &trans &trans &trans &trans                           &none      &none        &none        &none     &trans        
      >;
    };
    navigation {
      bindings = <
        &kp F1 &kp F2    &kp F3         &kp F4         &kp F5          &kp F6  &trans                                           &trans  &kp F7 &kp F8             &kp F9             &kp F10             &kp F11 &kp F12
        &trans &kp PG_UP &kp HOME       &kp UP_ARROW   &kp END         &trans  &trans                                           &trans &none  &kp RS(HOME)       &kp RS(UP_ARROW)   &kp RS(END)         &none   &trans
        &trans &kp PG_DN &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &trans  &trans        &trans &trans &trans &trans        &trans &none  &kp RS(LEFT_ARROW) &kp RS(DOWN_ARROW) &kp RS(RIGHT_ARROW) &none   &trans
        &trans &none     &none          &none          &none           &trans                      &trans &trans                       &none  &none              &none              &none               &none   &trans
        &trans &none     &none          &none          &none                      &trans &trans &trans &trans &trans &trans                   &none              &none              &none               &none   &trans
      >;
    };
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                     &trans                 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &bootloader                                                               &bootloader            &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none        &none        &none                   &none &none &bt BT_CLR &none                      &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none &none &none
        &none &none        &none        &none        &macro_ver   &none                                      &none &none                                                        &none        &none        &none        &none &none &none
        &none &none        &none        &none        &none                                       &none &none &none &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none &none &none
      >;
    };
  };
};
